version: '3.8'

services:
  database:
    image: mysql:8.4.0
    restart: always
    container_name: database
    environment:
      MYSQL_DATABASE: 'sound-filter-db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - "3306:3306"
    volumes:
      - sound-filter-db:/var/lib/mysql
    networks:
      - app_net
      
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"            
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack_data
      - AWS_DEFAULT_REGION=eu-central-1
    volumes:
      - "localstack-data:/tmp/localstack_data"
    networks:
      - app_net
      
  s3-init:
    image: amazon/aws-cli:latest
    container_name: s3-init
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=eu-central-1
    volumes:
      - "./init-s3.sh:/init-s3.sh"
    entrypoint: ["/bin/bash", "/init-s3.sh"]
    networks:
      - app_net
      
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      HP_MAX_MESSAGES: 5000
      HP_DATABASE: /data/mailpit.db
      HP_SMTP_AUTH_ACCEPT_ANY: 1
      HP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - app_net
      
  caddy:
    image: caddy:latest
    container_name: caddy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  app_net:
    driver: bridge
volumes:
  sound-filter-db:
  localstack-data: